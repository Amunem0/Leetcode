class Solution {
public:

    string removeSubstring(string &s, string &matchstring){
        stack<char>st;
        for(char &ch : s){
            if(ch==matchstring[1] && !st.empty() && st.top()==matchstring[0]){
                st.pop();
            }
            else{
                st.push(ch);
            }
        }
        string temp;
        while(!st.empty()){
            temp.push_back(st.top());
            st.pop();
        }
        reverse(temp.begin(),temp.end());
        return temp;
    }
    int maximumGain(string s, int x, int y) {
        int n=s.size();
        int score=0;
        string maxStr=(x>y)?"ab":"ba";
        string minStr=(x<y)?"ab":"ba";

        string temp_first=removeSubstring(s,maxStr);
        int charRemoved=(n-temp_first.length())/2;
        score+=(charRemoved)*max(x,y);

        string temp_second=removeSubstring(temp_first,minStr);
        charRemoved=(temp_first.length()-temp_second.length())/2;
        score+=(charRemoved)*min(x,y);

        return score;
    }
};
